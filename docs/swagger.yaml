swagger: "2.0"
info:
  version: 1.0.0
  title: Scorecard V1 API
  description: >
    ## Pagination

    - Requests that return multiple items will be paginated to 20 items by
    default.

    - You can specify further pages with the `page` parameter.

    - You can also set a custom page size up to 100 with the `perPage`
    parameter.

    - Pagination response data is included in http headers.

    - By default, the response header contains links with `next`, `last`,
    `first`, `prev` resource links.


    ## Access levels

    - M2M token is supported, all non-public-accessed endpoint can be accessed
    using M2M token with proper scopes.

    - Only admins and copilots can create/update an entity.

    - It will be considered as admin user if using valid M2M token(having read
    challenge scope) to list review process/scorecards or retrieve review process/scorecards by id

    - The weight of corresponding items (Steps in Events), Scorecard Groups, Scorecard Sections,
    Scorecard Questions should all be positive integers.  No negative weights are supported.

    - It is highly recommended that the weights of each item in a grouping will add up to a total of 100.

host: api.topcoder.com
basePath: /v1
schemes:
  - http
  - https
securityDefinitions:
  bearer:
    type: apiKey
    name: Authorization
    in: header

paths:
  /processes:
    get:
      tags:
        - Review Processes
      description: Retrieve the review processes in the system.
      security:
        - bearer: []
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/perPage"
        - name: title
          in: query
          description: Filter by title, partial match
          required: false
          type: string
        - name: track
          in: query
          description: Filter by process track.
          required: false
          type: array
          items:
            type: string
        - name: sortBy
          in: query
          description: Sort the results by field.
          required: false
          type: string
          enum: ["title", "createdAt", "createdBy", "track", "type", "status"]
        - name: sortOrder
          in: query
          description: Order the results by the asc/desc.
          required: false
          type: string
          enum: [asc, desc]
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ReviewProcessShort"
          headers:
            X-Next-Page:
              type: integer
              description: The index of the next page
            X-Page:
              type: integer
              description: The index of the current page (starting at 1)
            X-Per-Page:
              type: integer
              description: The number of items to list per page
            X-Prev-Page:
              type: integer
              description: The index of the previous page
            X-Total:
              type: integer
              description: The total number of items
            X-Total-Pages:
              type: integer
              description: The total number of pages
            Link:
              type: string
              description: Pagination link header.
        "400":
          description: Bad request. Request parameters were invalid.
          schema:
            $ref: "#/definitions/ErrorModel"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorModel"
    post:
      tags:
        - Review Processes
      description: Create a new Review Process in the system.
      security:
        - bearer: []
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ReviewProcessBodyForCreateAndEdit"
      responses:
        "201":
          description: Created - The request was successful and the resource is returned.
          schema:
            $ref: "#/definitions/ReviewProcess"
        "400":
          description: Bad request. Request parameters were invalid.
          schema:
            $ref: "#/definitions/ErrorModel"
        "401":
          description: Unauthorized. Fail to authenticate the requester.
          schema:
            $ref: "#/definitions/ErrorModel"
        "403":
          description: Forbidden. The requester does not have the correct permission to create the entity
          schema:
            $ref: "#/definitions/ErrorModel"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorModel"

  /processes/{processId}:
    get:
      tags:
        - Review Processes
      description: Retrieve the review process with provided id.
      security:
        - bearer: []
      produces:
        - application/json
      parameters:
        - name: processId
          in: path
          required: true
          type: string
          format: UUID
          description: The id of the process to retrieve.
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/ReviewProcess"
        "400":
          description: Bad request. Request parameters were invalid.
          schema:
            $ref: "#/definitions/ErrorModel"
        "403":
          description: Forbidden. The requester does not have the correct permission to view the entity
          schema:
            $ref: "#/definitions/ErrorModel"
        "404":
          description: Entity not found
          schema:
            $ref: "#/definitions/ErrorModel"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorModel"
    put:
      tags:
        - Review Processes
      description: Edit the review process with provided id.
      security:
        - bearer: []
      produces:
        - application/json
      parameters:
        - name: processId
          in: path
          required: true
          type: string
          format: UUID
          description: The id of the process to retrieve.
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ReviewProcessBodyForCreateAndEdit"
      responses:
        "200":
          description: Updated - The request was successful and the resource is returned.
          schema:
            $ref: "#/definitions/ReviewProcess"
        "400":
          description: Bad request. Request parameters were invalid.
          schema:
            $ref: "#/definitions/ErrorModel"
        "401":
          description: Unauthorized. Fail to authenticate the requester.
          schema:
            $ref: "#/definitions/ErrorModel"
        "403":
          description: Forbidden. The requester does not have the correct permission to update the entity
          schema:
            $ref: "#/definitions/ErrorModel"
        "404":
          description: Challenge not found
          schema:
            $ref: "#/definitions/ErrorModel"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorModel"
    patch:
      tags:
        - Review Processes
      description: |
        Partially update the review process with provided id.  Only the fields that are
        provided will be updated.
      security:
        - bearer: []
      produces:
        - application/json
      parameters:
        - name: processId
          in: path
          required: true
          type: string
          format: UUID
          description: The id of the process to retrieve.
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ReviewProcessBodyForPartialEdit"
      responses:
        "200":
          description: Updated - The request was successful and the resource is returned.
          schema:
            $ref: "#/definitions/ReviewProcess"
        "400":
          description: Bad request. Request parameters were invalid.
          schema:
            $ref: "#/definitions/ErrorModel"
        "401":
          description: Unauthorized. Fail to authenticate the requester.
          schema:
            $ref: "#/definitions/ErrorModel"
        "403":
          description: Forbidden. The requester does not have the correct permission to update the entity.
          schema:
            $ref: "#/definitions/ErrorModel"
        "404":
          description: Challenge not found
          schema:
            $ref: "#/definitions/ErrorModel"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorModel"
    delete:
      tags:
        - Review Processes
      description: Delete the process with the provided id.
      security:
        - bearer: []
      produces:
        - application/json
      parameters:
        - name: processId
          in: path
          required: true
          type: string
          format: UUID
          description: The id of the process to delete.
      responses:
        "200":
          description: Deleted - The request was successful and the resource is returned.
          schema:
            $ref: "#/definitions/ReviewProcess"
        "400":
          description: Bad request. Request parameters were invalid.
          schema:
            $ref: "#/definitions/ErrorModel"
        "401":
          description: Unauthorized. Fail to authenticate the requester.
          schema:
            $ref: "#/definitions/ErrorModel"
        "403":
          description: Forbidden. The requester does not have the correct permission to delete the entity.
          schema:
            $ref: "#/definitions/ErrorModel"
        "404":
          description: Challenge not found
          schema:
            $ref: "#/definitions/ErrorModel"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorModel"

  /scorecards:
    get:
      tags:
        - Scorecards
      description: Retrieve the scorecards in the system.
      security:
        - bearer: []
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/perPage"
        - name: title
          in: query
          description: Filter by title, partial match
          required: false
          type: string
        - name: track
          in: query
          description: Filter by process track.
          required: false
          type: array
          items:
            type: string
        - name: sortBy
          in: query
          description: Sort the results by field.
          required: false
          type: string
          enum: ["title", "createdAt", "createdBy", "track", "type", "status"]
        - name: sortOrder
          in: query
          description: Order the results by the asc/desc.
          required: false
          type: string
          enum: [asc, desc]
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ScorecardShort"
          headers:
            X-Next-Page:
              type: integer
              description: The index of the next page
            X-Page:
              type: integer
              description: The index of the current page (starting at 1)
            X-Per-Page:
              type: integer
              description: The number of items to list per page
            X-Prev-Page:
              type: integer
              description: The index of the previous page
            X-Total:
              type: integer
              description: The total number of items
            X-Total-Pages:
              type: integer
              description: The total number of pages
            Link:
              type: string
              description: Pagination link header.
        "400":
          description: Bad request. Request parameters were invalid.
          schema:
            $ref: "#/definitions/ErrorModel"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorModel"
    post:
      tags:
        - Scorecards
      description: Create a new scorecard in the system.
      security:
        - bearer: []
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ScorecardBodyForCreateAndEdit"
      responses:
        "201":
          description: Created - The request was successful and the resource is returned.
          schema:
            $ref: "#/definitions/Scorecard"
        "400":
          description: Bad request. Request parameters were invalid.
          schema:
            $ref: "#/definitions/ErrorModel"
        "401":
          description: Unauthorized. Fail to authenticate the requester.
          schema:
            $ref: "#/definitions/ErrorModel"
        "403":
          description: Forbidden. The requester does not have the correct permission to create the entity
          schema:
            $ref: "#/definitions/ErrorModel"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorModel"

  /scorecards/{scorecardId}:
    get:
      tags:
        - Scorecards
      description: Retrieve the scorecard with provided id.
      security:
        - bearer: []
      produces:
        - application/json
      parameters:
        - name: scorecardId
          in: path
          required: true
          type: string
          format: UUID
          description: The id of the scorecard to retrieve.
      responses:
        "200":
          description: OK
          schema:
            $ref: "#/definitions/Scorecard"
        "400":
          description: Bad request. Request parameters were invalid.
          schema:
            $ref: "#/definitions/ErrorModel"
        "403":
          description: Forbidden. The requester does not have the correct permission to view the entity
          schema:
            $ref: "#/definitions/ErrorModel"
        "404":
          description: Entity not found
          schema:
            $ref: "#/definitions/ErrorModel"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorModel"
    put:
      tags:
        - Scorecards
      description: Edit the scorecard with provided id.
      security:
        - bearer: []
      produces:
        - application/json
      parameters:
        - name: scorecardId
          in: path
          required: true
          type: string
          format: UUID
          description: The id of the scorecard to retrieve.
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ScorecardBodyForCreateAndEdit"
      responses:
        "200":
          description: Updated - The request was successful and the resource is returned.
          schema:
            $ref: "#/definitions/Scorecard"
        "400":
          description: Bad request. Request parameters were invalid.
          schema:
            $ref: "#/definitions/ErrorModel"
        "401":
          description: Unauthorized. Fail to authenticate the requester.
          schema:
            $ref: "#/definitions/ErrorModel"
        "403":
          description: Forbidden. The requester does not have the correct permission to update the entity
          schema:
            $ref: "#/definitions/ErrorModel"
        "404":
          description: Challenge not found
          schema:
            $ref: "#/definitions/ErrorModel"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorModel"
    patch:
      tags:
        - Scorecards
      description: |
        Partially update the scorecard  with provided id.  Only the fields that are
        provided will be updated.
      security:
        - bearer: []
      produces:
        - application/json
      parameters:
        - name: scorecardId
          in: path
          required: true
          type: string
          format: UUID
          description: The id of the scorecard to edit.
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ScorecardBodyForPartialEdit"
      responses:
        "200":
          description: Updated - The request was successful and the resource is returned.
          schema:
            $ref: "#/definitions/Scorecard"
        "400":
          description: Bad request. Request parameters were invalid.
          schema:
            $ref: "#/definitions/ErrorModel"
        "401":
          description: Unauthorized. Fail to authenticate the requester.
          schema:
            $ref: "#/definitions/ErrorModel"
        "403":
          description: Forbidden. The requester does not have the correct permission to update the entity.
          schema:
            $ref: "#/definitions/ErrorModel"
        "404":
          description: Challenge not found
          schema:
            $ref: "#/definitions/ErrorModel"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorModel"
    delete:
      tags:
        - Scorecards
      description: Delete the process with the provided id.
      security:
        - bearer: []
      produces:
        - application/json
      parameters:
        - name: scorecardId
          in: path
          required: true
          type: string
          format: UUID
          description: The id of the scorecard to delete.
      responses:
        "200":
          description: Deleted - The request was successful and the resource is returned.
          schema:
            $ref: "#/definitions/ReviewProcess"
        "400":
          description: Bad request. Request parameters were invalid.
          schema:
            $ref: "#/definitions/ErrorModel"
        "401":
          description: Unauthorized. Fail to authenticate the requester.
          schema:
            $ref: "#/definitions/ErrorModel"
        "403":
          description: Forbidden. The requester does not have the correct permission to delete the entity.
          schema:
            $ref: "#/definitions/ErrorModel"
        "404":
          description: Challenge not found
          schema:
            $ref: "#/definitions/ErrorModel"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorModel"

  /processEventTypes:
    get:
      tags:
        - Lookups
        - Review Processes
      description: Retrieve the available events types in the system.
      security:
        - bearer: []
      produces:
        - application/json
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ProcessEventType"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorModel"

  /reviewSteps:
    get:
      tags:
        - Lookups
        - Review Processes
      description: Retrieve the available review steps in the system.
      security:
        - bearer: []
      produces:
        - application/json
      parameters:
        - $ref: "#/parameters/page"
        - $ref: "#/parameters/perPage"
        - name: name
          in: query
          description: Filter by name
          required: false
          type: string
      responses:
        "200":
          description: OK
          schema:
            type: array
            items:
              $ref: "#/definitions/ReviewStep"
          headers:
            X-Next-Page:
              type: integer
              description: The index of the next page
            X-Page:
              type: integer
              description: The index of the current page (starting at 1)
            X-Per-Page:
              type: integer
              description: The number of items to list per page
            X-Prev-Page:
              type: integer
              description: The index of the previous page
            X-Total:
              type: integer
              description: The total number of items
            X-Total-Pages:
              type: integer
              description: The total number of pages
            Link:
              type: string
              description: Pagination link header.
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorModel"

  /scorecards/generateExcel:
    post:
      tags:
        - Scorecards
      description: Generate XLS of the given scorecard for download.
      security:
        - bearer: []
      produces:
        - application/json
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: "#/definitions/ScorecardBodyForCreateAndEdit"
      responses:
        "200":
          description: The generated XLS file.
          schema:
            type: file
        "400":
          description: Bad request. Request parameters were invalid.
          schema:
            $ref: "#/definitions/ErrorModel"
        "401":
          description: Unauthorized. Fail to authenticate the requester.
          schema:
            $ref: "#/definitions/ErrorModel"
        "403":
          description: Forbidden. The requester does not have the correct permission to create the entity
          schema:
            $ref: "#/definitions/ErrorModel"
        "500":
          description: Internal Server Error
          schema:
            $ref: "#/definitions/ErrorModel"

parameters:
  page:
    name: page
    in: query
    description: The page number.
    required: false
    type: integer
    minimum: 1
    default: 1
  perPage:
    name: perPage
    in: query
    description: The number of items to list per page.
    required: false
    type: integer
    minimum: 1
    default: 20
    maximum: 100
  perPage100:
    name: perPage
    in: query
    description: The number of items to list per page.
    required: false
    type: integer
    minimum: 1
    default: 100
    maximum: 100

definitions:
  ProcessEventType:
    type: object
    required:
      - id
      - name
    properties:
      id:
        type: string
        format: UUID
        description: The event type id.
      name:
        type: string
        description: The event type name.
        example: "Submission Phase Opened"

  ReviewStep:
    type: object
    required:
      - id
      - name
      - icon
    properties:
      id:
        type: string
        format: UUID
        description: The review type id.
      name:
        type: string
        description: The review step label.
        example: "SonarQube"
      icon:
        type: string
        description: A string to indicate the icon to use when displaying this.
        example: "cube"

  ReviewProcessBodyForPartialEdit:
    type: object
    properties:
      description:
        type: string
        description: The review process desription.
      title:
        type: string
        description: The title of the entity.
      track:
        type: string
        description: The track of the entity.
      type:
        type: string
        description: The type of the entity.
      status:
        type: string
        description: The status of the entity.
        enum: ["complete", "pending", "running"]
      events:
        type: array
        description: |
          The review events for this process.  The ordering in the array
          indicates the ordering of the events.
        items:
          $ref: "#/definitions/ReviewEvent"

  ReviewProcessBodyForCreateAndEdit:
    type: object
    required:
      - title
      - track
      - events
      - status
    properties:
      description:
        type: string
        description: The review process desription.
      title:
        type: string
        description: The title of the entity.
      track:
        type: string
        description: The track of the entity.
      type:
        type: string
        description: The type of the entity.
      status:
        type: string
        description: The status of the entity.
        enum: ["complete", "pending", "running"]
      events:
        type: array
        description: |
          The review events for this process.  The ordering in the array
          indicates the ordering of the events.
        items:
          $ref: "#/definitions/ReviewEvent"

  ReviewProcess:
    type: object
    allOf:
      - $ref: "#/definitions/ReviewProcessShort"
      - type: object
        required:
          - events
        properties:
          description:
            type: string
            description: The review process desription.
          events:
            type: array
            description: |
              The review events for this process.  The ordering in the array
              indicates the ordering of the events.
            items:
              $ref: "#/definitions/ReviewEvent"

  ReviewEvent:
    type: object
    required:
      - eventType
      - steps
    properties:
      eventType:
        type: string
        format: UUID
      steps:
        type: array
        description: |
          The review steps for this event.  The ordering in the array
          indicates the ordering of the steps.  Total weight value of all
          the stpes should equal 100.
        items:
          $ref: "#/definitions/ReviewSteps"

  ReviewSteps:
    type: object
    required:
      - stepType
      - weight
    properties:
      stepType:
        type: string
        format: UUID
      weight:
        type: number

  ReviewProcessShort:
    type: object
    allOf:
      - type: object
        properties:
          id:
            type: string
            description: The review process id.
            format: UUID
      - $ref: "#/definitions/CommonData"
    required:
      - id

  ScorecardBodyForPartialEdit:
    type: object
    properties:
      description:
        type: string
        description: The scorecard description.
      title:
        type: string
        description: The title of the entity.
      track:
        type: string
        description: The track of the entity.
      type:
        type: string
        description: The type of the entity.
      status:
        type: string
        description: The status of the entity.
        enum: ["complete", "pending", "running"]
      groups:
        type: array
        description: |
          The groups for this scorecard.  The ordering in the array
          indicates the ordering of the groups.
        items:
          $ref: "#/definitions/ScorecardGroup"

  ScorecardBodyForCreateAndEdit:
    type: object
    required:
      - title
      - track
      - groups
      - status
    properties:
      description:
        type: string
        description: The scorecard description.
      title:
        type: string
        description: The title of the entity.
      track:
        type: string
        description: The track of the entity.
      type:
        type: string
        description: The type of the entity.
      status:
        type: string
        description: The status of the entity.
        enum: ["complete", "pending", "running"]
      groups:
        type: array
        description: |
          The groups for this scorecard.  The ordering in the array
          indicates the ordering of the groups.
        items:
          $ref: "#/definitions/ScorecardGroup"

  Scorecard:
    type: object
    allOf:
      - $ref: "#/definitions/ScorecardShort"
      - type: object
        required:
          - groups
        properties:
          description:
            type: string
            description: The review process description.
          groups:
            type: array
            description: |
              The groups for this scorecard.  The ordering in the array
              indicates the ordering of the groups.
            items:
              $ref: "#/definitions/ScorecardGroup"

  ScorecardGroup:
    type: object
    required:
      - name
      - weight
      - sections
    properties:
      name:
        type: string
        description: The name of the group.
      weight:
        type: number
        description: The weight of the group.
      sections:
        type: array
        description: |
          The sections in this group.  The ordering in the array indicates
          the ordering of the sections.
        items:
          $ref: "#/definitions/ScorecardSection"

  ScorecardSection:
    type: object
    required:
      - name
      - weight
      - questions
    properties:
      name:
        type: string
        description: The name of the section.
      weight:
        type: number
        description: The weight of the section.
      questions:
        type: array
        description: |
          The questions in this section.  The ordering in the array indicates the ordering
          of the questions.
        items:
          $ref: "#/definitions/ScorecardQuestion"

  ScorecardQuestion:
    type: object
    required:
      - questionText
      - questionGuidelines
      - questionType
      - weight
      - isUpload
    properties:
      questionText:
        type: string
        description: The question text.
      questionGuidelines:
        type: string
        description: The guidelines for the question.
      questionType:
        type: string
        enum: ["Scale1-4", "Scale1-9", "YesOrNo"]
      weight:
        type: number
        description: The weight of the question.
      isUpload:
        type: boolean
        description: Whether upload is allowed for this question or not.

  ScorecardShort:
    type: object
    allOf:
      - type: object
        properties:
          id:
            type: string
            description: The scorecard id.
            format: UUID
      - $ref: "#/definitions/CommonData"
    required:
      - id

  CommonData:
    type: object
    required:
      - title
      - track
      - type
      - status
      - createdAt
      - createdBy
      - updatedAt
      - updatedBy
    properties:
      title:
        type: string
        description: The title of the entity.
      track:
        type: string
        description: The track of the entity.
      type:
        type: string
        description: The type of the entity.
      status:
        type: string
        description: The type of the entity.
        enum: ["complete", "pending", "running"]
      createdAt:
        type: string
        format: date-time
        description: "ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)"
      createdBy:
        type: string
        example: topcoder user
      updatedAt:
        type: string
        format: date-time
        description: "ISO-8601 formatted date times (YYYY-MM-DDTHH:mm:ss.sssZ)"
      updatedBy:
        type: string
        example: topcoder user

  ErrorModel:
    type: object
    properties:
      message:
        type: string
        description: the error message
