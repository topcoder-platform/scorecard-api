{
	"info": {
		"_postman_id": "03925123-7342-427c-9f1d-83e3e48bd118",
		"name": "Topcoder-scorecards-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Health Check",
			"item": [
				{
					"name": "health check",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/health",
							"host": [
								"{{URL}}"
							],
							"path": [
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Lookups",
			"item": [
				{
					"name": "Process Event Types",
					"item": [
						{
							"name": "get process event types with admin token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processEventTypes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processEventTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "get process event types with copilot token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_copilot}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processEventTypes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processEventTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "get process event types with user token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_user}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processEventTypes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processEventTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "get process event types with m2m token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_m2m_read_scorecard}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processEventTypes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processEventTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "get process event types with expired token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Failed to authenticate token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_expired}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processEventTypes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processEventTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "get process event types with invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Invalid Token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_invalid}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processEventTypes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processEventTypes"
									]
								}
							},
							"response": []
						},
						{
							"name": "get process event types with no token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"No token provided.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/processEventTypes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processEventTypes"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Review Steps",
					"item": [
						{
							"name": "get review steps with admin token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/reviewSteps?name=a&page=1&perPage=5",
									"host": [
										"{{URL}}"
									],
									"path": [
										"reviewSteps"
									],
									"query": [
										{
											"key": "name",
											"value": "a"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get review steps with copilot token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_copilot}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/reviewSteps?name=a&page=1&perPage=5",
									"host": [
										"{{URL}}"
									],
									"path": [
										"reviewSteps"
									],
									"query": [
										{
											"key": "name",
											"value": "a"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get review steps with user token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_user}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/reviewSteps?name=a&page=1&perPage=5",
									"host": [
										"{{URL}}"
									],
									"path": [
										"reviewSteps"
									],
									"query": [
										{
											"key": "name",
											"value": "a"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get review steps with m2m token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_m2m_read_scorecard}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/reviewSteps?name=a&page=1&perPage=5",
									"host": [
										"{{URL}}"
									],
									"path": [
										"reviewSteps"
									],
									"query": [
										{
											"key": "name",
											"value": "a"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get review steps with expired token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Failed to authenticate token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_expired}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/reviewSteps?name=a&page=1&perPage=5",
									"host": [
										"{{URL}}"
									],
									"path": [
										"reviewSteps"
									],
									"query": [
										{
											"key": "name",
											"value": "a"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get review steps with invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Invalid Token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_invalid}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/reviewSteps?name=a&page=1&perPage=5",
									"host": [
										"{{URL}}"
									],
									"path": [
										"reviewSteps"
									],
									"query": [
										{
											"key": "name",
											"value": "a"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get review steps with no token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"No token provided.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/reviewSteps?name=a&page=1&perPage=5",
									"host": [
										"{{URL}}"
									],
									"path": [
										"reviewSteps"
									],
									"query": [
										{
											"key": "name",
											"value": "a"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get review steps with empty name parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"name\\\" is not allowed to be empty\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/reviewSteps?name=&page=1&perPage=5",
									"host": [
										"{{URL}}"
									],
									"path": [
										"reviewSteps"
									],
									"query": [
										{
											"key": "name",
											"value": ""
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get review steps with invalid page parameter 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"page\\\" must be larger than or equal to 1\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/reviewSteps?name=a&page=0&perPage=5",
									"host": [
										"{{URL}}"
									],
									"path": [
										"reviewSteps"
									],
									"query": [
										{
											"key": "name",
											"value": "a"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "perPage",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get review steps with invalid page parameter 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"page\\\" must be a number\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/reviewSteps?name=a&page=a&perPage=5",
									"host": [
										"{{URL}}"
									],
									"path": [
										"reviewSteps"
									],
									"query": [
										{
											"key": "name",
											"value": "a"
										},
										{
											"key": "page",
											"value": "a"
										},
										{
											"key": "perPage",
											"value": "5"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get review steps with invalid perPage parameter 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"perPage\\\" must be larger than or equal to 1\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/reviewSteps?name=a&page=1&perPage=0",
									"host": [
										"{{URL}}"
									],
									"path": [
										"reviewSteps"
									],
									"query": [
										{
											"key": "name",
											"value": "a"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "0"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get review steps with invalid perPage parameter 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"perPage\\\" must be a number\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/reviewSteps?name=a&page=1&perPage=a",
									"host": [
										"{{URL}}"
									],
									"path": [
										"reviewSteps"
									],
									"query": [
										{
											"key": "name",
											"value": "a"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "a"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "get review steps with invalid perPage parameter 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"perPage\\\" must be less than or equal to 100\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/reviewSteps?name=a&page=1&perPage=200",
									"host": [
										"{{URL}}"
									],
									"path": [
										"reviewSteps"
									],
									"query": [
										{
											"key": "name",
											"value": "a"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "200"
										}
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Review Processes",
			"item": [
				{
					"name": "Create",
					"item": [
						{
							"name": "create review processes with admin token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 201', function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    if(pm.response.status === \"Created\"){\r",
											"        const response = pm.response.json()\r",
											"        pm.environment.set(\"review_process_id_1\", response.id);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with copilot token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 201', function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    if(pm.response.status === \"Created\"){\r",
											"        const response = pm.response.json()\r",
											"        pm.environment.set(\"review_process_id_2\", response.id);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_copilot}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Develop\",\r\n    \"status\": \"complete\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with m2m token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 201', function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    if(pm.response.status === \"Created\"){\r",
											"        const response = pm.response.json()\r",
											"        pm.environment.set(\"review_process_id_3\", response.id);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_m2m_create_review_process}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"QA\",\r\n    \"status\": \"running\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with user token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 403', function () {\r",
											"    pm.response.to.have.status(403);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_user}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with expired token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Failed to authenticate token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_expired}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Invalid Token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_invalid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with no token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"No token provided.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with missing fields 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"title\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with missing fields 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"track\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with missing fields 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"status\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with missing fields 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"events\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with missing fields 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"eventType\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with missing fields 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"steps\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with missing fields 7",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"stepType\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with missing fields 8",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"stepType\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with missing fields 9",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"weight\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with invalid fields 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"status\\\" must be one of [complete, pending, running]\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending 2\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with invalid fields 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"eventType\\\" must be a valid GUID\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"invalid\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with invalid fields 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"stepType\\\" must be a valid GUID\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"invalid\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with invalid fields 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"weight\\\" must be a positive number\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with invalid fields 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"weight\\\" must be less than or equal to 100\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 200\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with duplicated record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"There is already a review process with title: \\\"Topcoder Challenge\\\" and track: \\\"Design\\\"\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 100\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with not found event type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 404', function () {\r",
											"    pm.response.to.have.status(404);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"ProcessEventType with id: 00000000-0000-0000-0000-000000000000 doesn't exist\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge new\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{not_found_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 100\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with not found step type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 404', function () {\r",
											"    pm.response.to.have.status(404);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"ReviewStep with id: 00000000-0000-0000-0000-000000000000 doesn't exist\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge new\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{not_found_id}}\",\r\n                    \"weight\": 100\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						},
						{
							"name": "create review processes with wrong weights",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Following objects total weight must be 100\\nevents[0].steps\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge new\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 50\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 50\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 50\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get",
					"item": [
						{
							"name": "get review process with admin token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get review process with copilot token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_copilot}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get review process with user token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_user}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get review process with m2m token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_m2m_read_review_process}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get review process with expired token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Failed to authenticate token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_expired}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get review process with invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Invalid Token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_invalid}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get review process with no token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"No token provided.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get review process with not found id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 404', function () {\r",
											"    pm.response.to.have.status(404);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"ReviewProcess with id: 00000000-0000-0000-0000-000000000000 doesn't exist\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes/{{not_found_id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{not_found_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Search",
					"item": [
						{
							"name": "search review processes with admin token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes?title=Top&track=Design,Develop,QA&page=1&perPage=5&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "Design,Develop,QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search review processes with copilot token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_copilot}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes?title=Top&track=Design,Develop,QA&page=1&perPage=5&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "Design,Develop,QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search review processes with user token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_user}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes?title=Top&track=Design,Develop,QA&page=1&perPage=5&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "Design,Develop,QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search review processes with m2m token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_m2m_all_review_process}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes?title=Top&track=Design,Develop,QA&page=1&perPage=5&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "Design,Develop,QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search review processes with expired token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Failed to authenticate token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_expired}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes?title=Top&track=Design,Develop,QA&page=1&perPage=5&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "Design,Develop,QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search review processes with invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Invalid Token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_invalid}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes?title=Top&track=Design,Develop,QA&page=1&perPage=5&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "Design,Develop,QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search review processes with no token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"No token provided.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/processes?title=Top&track=Design,Develop,QA&page=1&perPage=5&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "Design,Develop,QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search review processes with empty title parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"title\\\" is not allowed to be empty\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes?title=&track=Design,Develop,QA&page=1&perPage=5&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									],
									"query": [
										{
											"key": "title",
											"value": ""
										},
										{
											"key": "track",
											"value": "Design,Develop,QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search review processes with empty track parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"track\\\" is not allowed to be empty, \\\"track\\\" must be an array\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes?title=Top&track=&page=1&perPage=5&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": ""
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search review processes with invalid page parameter 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"page\\\" must be larger than or equal to 1\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes?title=Top&track=QA&page=0&perPage=5&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "QA"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "perPage",
											"value": "5"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search review processes with invalid page parameter 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"page\\\" must be a number\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes?title=Top&track=QA&page=a&perPage=5&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "QA"
										},
										{
											"key": "page",
											"value": "a"
										},
										{
											"key": "perPage",
											"value": "5"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search review processes with invalid perPage parameter 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"perPage\\\" must be larger than or equal to 1\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes?title=Top&track=QA&page=1&perPage=0&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "0"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search review processes with invalid perPage parameter 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"perPage\\\" must be a number\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes?title=Top&track=QA&page=1&perPage=a&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "a"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search review processes with invalid perPage parameter 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"perPage\\\" must be less than or equal to 100\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes?title=Top&track=QA&page=1&perPage=200&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "200"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search review processes with invalid sortBy parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"sortBy\\\" must be one of [title, createdAt, createdBy, track, type, status]\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes?title=Top&track=QA&page=1&perPage=10&sortBy=invalid&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										},
										{
											"key": "sortBy",
											"value": "invalid"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search review processes with invalid sortOrder parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"sortOrder\\\" must be one of [asc, desc]\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes?title=Top&track=QA&page=1&perPage=10&sortBy=title&sortOrder=invalid",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										},
										{
											"key": "sortBy",
											"value": "title"
										},
										{
											"key": "sortOrder",
											"value": "invalid"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Partially Update",
					"item": [
						{
							"name": "partially update review processes with admin token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update review processes with copilot token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_copilot}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Develop\",\r\n    \"status\": \"complete\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update review processes with m2m token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_m2m_update_review_process}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"QA\",\r\n    \"status\": \"running\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_3}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_3}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update review processes with user token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 403', function () {\r",
											"    pm.response.to.have.status(403);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_user}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update review processes with expired token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Failed to authenticate token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_expired}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update review processes with invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Invalid Token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_invalid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update review processes with no token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"No token provided.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update review processes with invalid fields 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"status\\\" must be one of [complete, pending, running]\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending 2\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update review processes with invalid fields 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"eventType\\\" must be a valid GUID\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"invalid\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update review processes with invalid fields 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"stepType\\\" must be a valid GUID\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"invalid\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update review processes with invalid fields 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"weight\\\" must be a positive number\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update review processes with invalid fields 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"weight\\\" must be less than or equal to 100\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 200\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update review processes with duplicated record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"There is already a review process with title: \\\"Topcoder Challenge 2\\\" and track: \\\"Develop\\\"\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Develop\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 100\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update review processes with not found event type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 404', function () {\r",
											"    pm.response.to.have.status(404);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"ProcessEventType with id: 00000000-0000-0000-0000-000000000000 doesn't exist\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge new\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{not_found_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 100\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update review processes with not found step type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 404', function () {\r",
											"    pm.response.to.have.status(404);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"ReviewStep with id: 00000000-0000-0000-0000-000000000000 doesn't exist\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge new\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{not_found_id}}\",\r\n                    \"weight\": 100\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update review processes with wrong weights",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Following objects total weight must be 100\\nevents[0].steps\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge new\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 50\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 50\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 50\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update review processes with not found id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 404', function () {\r",
											"    pm.response.to.have.status(404);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"ReviewProcess with id: 00000000-0000-0000-0000-000000000000 doesn't exist\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge new\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 50\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 50\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 50\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{not_found_id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{not_found_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Fully Update",
					"item": [
						{
							"name": "fully update review processes with admin token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with copilot token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_copilot}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Develop\",\r\n    \"status\": \"complete\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with m2m token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_m2m_update_review_process}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"QA\",\r\n    \"status\": \"running\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_3}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_3}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with user token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 403', function () {\r",
											"    pm.response.to.have.status(403);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_user}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with expired token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Failed to authenticate token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_expired}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Invalid Token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_invalid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with no token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"No token provided.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with missing fields 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"title\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with missing fields 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"track\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with missing fields 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"status\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with missing fields 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"events\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with missing fields 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"eventType\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with missing fields 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"steps\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\"\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with missing fields 7",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"stepType\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with missing fields 8",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"stepType\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with missing fields 9",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"weight\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\"\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with invalid fields 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"status\\\" must be one of [complete, pending, running]\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending 2\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with invalid fields 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"eventType\\\" must be a valid GUID\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"invalid\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 25\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_4}}\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with invalid fields 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"stepType\\\" must be a valid GUID\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"invalid\",\r\n                    \"weight\": 25\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with invalid fields 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"weight\\\" must be a positive number\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 0\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with invalid fields 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"weight\\\" must be less than or equal to 100\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 200\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with duplicated record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"There is already a review process with title: \\\"Topcoder Challenge 2\\\" and track: \\\"Develop\\\"\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Develop\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 100\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with not found event type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 404', function () {\r",
											"    pm.response.to.have.status(404);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"ProcessEventType with id: 00000000-0000-0000-0000-000000000000 doesn't exist\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge new\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{not_found_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 100\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with not found step type",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 404', function () {\r",
											"    pm.response.to.have.status(404);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"ReviewStep with id: 00000000-0000-0000-0000-000000000000 doesn't exist\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge new\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{not_found_id}}\",\r\n                    \"weight\": 100\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with wrong weights",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Following objects total weight must be 100\\nevents[0].steps\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge new\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 50\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 50\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 50\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update review processes with not found id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 404', function () {\r",
											"    pm.response.to.have.status(404);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"ReviewProcess with id: 00000000-0000-0000-0000-000000000000 doesn't exist\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge new\",\r\n    \"track\": \"Design\",\r\n    \"status\": \"pending\",\r\n    \"events\": [\r\n        {\r\n            \"eventType\": \"{{event_type_id}}\",\r\n            \"steps\": [\r\n                {\r\n                    \"stepType\": \"{{step_type_id_1}}\",\r\n                    \"weight\": 50\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_2}}\",\r\n                    \"weight\": 50\r\n                },\r\n                {\r\n                    \"stepType\": \"{{step_type_id_3}}\",\r\n                    \"weight\": 50\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/processes/{{not_found_id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{not_found_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete",
					"item": [
						{
							"name": "delete review process with admin token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete review process with copilot token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_copilot}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete review process with m2m token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_m2m_delete_review_process}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_3}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_3}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete review process with user token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 403', function () {\r",
											"    pm.response.to.have.status(403);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_user}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete review process with expired token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Failed to authenticate token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_expired}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete review process with invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Invalid Token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_invalid}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete review process with no token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"No token provided.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{URL}}/processes/{{review_process_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{review_process_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete review process with not found id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 404', function () {\r",
											"    pm.response.to.have.status(404);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"ReviewProcess with id: 00000000-0000-0000-0000-000000000000 doesn't exist\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/processes/{{not_found_id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"processes",
										"{{not_found_id}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Scorecard",
			"item": [
				{
					"name": "Create",
					"item": [
						{
							"name": "create scorecard with admin token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 201', function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    if(pm.response.status === \"Created\"){\r",
											"        const response = pm.response.json()\r",
											"        pm.environment.set(\"scorecard_id_1\", response.id);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with copilot token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 201', function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    if(pm.response.status === \"Created\"){\r",
											"        const response = pm.response.json()\r",
											"        pm.environment.set(\"scorecard_id_2\", response.id);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_copilot}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with m2m token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 201', function () {\r",
											"    pm.response.to.have.status(201);\r",
											"    if(pm.response.status === \"Created\"){\r",
											"        const response = pm.response.json()\r",
											"        pm.environment.set(\"scorecard_id_3\", response.id);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_m2m_create_scorecard}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"QA\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with user token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 403', function () {\r",
											"    pm.response.to.have.status(403);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_user}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with expired token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Failed to authenticate token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_expired}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Invalid Token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_invalid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with no token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"No token provided.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with missing fields 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"title\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with missing fields 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"track\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with missing fields 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"status\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with missing fields 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"groups\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with missing fields 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"name\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with missing fields 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"weight\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with missing fields 7",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"sections\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with missing fields 8",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"name\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with missing fields 9",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"weight\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with missing fields 10",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"questions\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with missing fields 11",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"questionText\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with missing fields 12",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"questionGuidelines\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with missing fields 13",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"questionType\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with missing fields 14",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"weight\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with missing fields 15",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"isUpload\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with invalid fields 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"status\\\" must be one of [complete, pending, running]\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending 2\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with invalid fields 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"weight\\\" must be a positive number\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 0,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with invalid fields 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"weight\\\" must be less than or equal to 100\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 200,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with invalid fields 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"isUpload\\\" must be a boolean\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": \"a\"\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with invalid fields 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"groups\\\" must be an array\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": {}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with duplicated record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"There is already a scorecard with title: \\\"Topcoder Challenge 2\\\" and track: \\\"Develop\\\"\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						},
						{
							"name": "create scorecard with wrong weights",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Following objects total weight must be 100\\ngroups[0].sections[0].questions\\ngroups[0].sections\\ngroups\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge new\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 25,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 20,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 75,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get",
					"item": [
						{
							"name": "get scorecard with admin token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get scorecard with copilot token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_copilot}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get scorecard with user token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_user}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get scorecard with m2m token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_m2m_read_scorecard}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get scorecard with expired token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Failed to authenticate token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_expired}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get scorecard with invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Invalid Token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_invalid}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get scorecard with no token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"No token provided.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "get scorecard with not found id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 404', function () {\r",
											"    pm.response.to.have.status(404);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Scorecard with id: 00000000-0000-0000-0000-000000000000 doesn't exist\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards/{{not_found_id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{not_found_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Search",
					"item": [
						{
							"name": "search scorecards with admin token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards?title=Top&track=Design,Develop,QA&page=1&perPage=5&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "Design,Develop,QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search scorecards with copilot token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_copilot}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards?title=Top&track=Design,Develop,QA&page=1&perPage=5&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "Design,Develop,QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search scorecards with user token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_user}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards?title=Top&track=Design,Develop,QA&page=1&perPage=5&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "Design,Develop,QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search scorecards with m2m token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_m2m_all_scorecard}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards?title=Top&track=Design,Develop,QA&page=1&perPage=5&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "Design,Develop,QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search scorecards with expired token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Failed to authenticate token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_expired}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards?title=Top&track=Design,Develop,QA&page=1&perPage=5&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "Design,Develop,QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search scorecards with invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Invalid Token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_invalid}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards?title=Top&track=Design,Develop,QA&page=1&perPage=5&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "Design,Develop,QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search scorecards with no token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"No token provided.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{URL}}/scorecards?title=Top&track=Design,Develop,QA&page=1&perPage=5&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "Design,Develop,QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search scorecards with empty title parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"title\\\" is not allowed to be empty\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards?title=&track=Design,Develop,QA&page=1&perPage=5&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									],
									"query": [
										{
											"key": "title",
											"value": ""
										},
										{
											"key": "track",
											"value": "Design,Develop,QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search scorecards with empty track parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"track\\\" is not allowed to be empty, \\\"track\\\" must be an array\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards?title=Top&track=&page=1&perPage=5&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": ""
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "5"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search scorecards with invalid page parameter 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"page\\\" must be larger than or equal to 1\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards?title=Top&track=QA&page=0&perPage=5&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "QA"
										},
										{
											"key": "page",
											"value": "0"
										},
										{
											"key": "perPage",
											"value": "5"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search scorecards with invalid page parameter 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"page\\\" must be a number\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards?title=Top&track=QA&page=a&perPage=5&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "QA"
										},
										{
											"key": "page",
											"value": "a"
										},
										{
											"key": "perPage",
											"value": "5"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search scorecards with invalid perPage parameter 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"perPage\\\" must be larger than or equal to 1\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards?title=Top&track=QA&page=1&perPage=0&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "0"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search scorecards with invalid perPage parameter 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"perPage\\\" must be a number\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards?title=Top&track=QA&page=1&perPage=a&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "a"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search scorecards with invalid perPage parameter 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"perPage\\\" must be less than or equal to 100\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards?title=Top&track=QA&page=1&perPage=200&sortBy=status&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "200"
										},
										{
											"key": "sortBy",
											"value": "status"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search scorecards with invalid sortBy parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"sortBy\\\" must be one of [title, createdAt, createdBy, track, type, status]\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards?title=Top&track=QA&page=1&perPage=10&sortBy=invalid&sortOrder=desc",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										},
										{
											"key": "sortBy",
											"value": "invalid"
										},
										{
											"key": "sortOrder",
											"value": "desc"
										}
									]
								}
							},
							"response": []
						},
						{
							"name": "search scorecards with invalid sortOrder parameter",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"sortOrder\\\" must be one of [asc, desc]\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards?title=Top&track=QA&page=1&perPage=10&sortBy=title&sortOrder=invalid",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards"
									],
									"query": [
										{
											"key": "title",
											"value": "Top"
										},
										{
											"key": "track",
											"value": "QA"
										},
										{
											"key": "page",
											"value": "1"
										},
										{
											"key": "perPage",
											"value": "10"
										},
										{
											"key": "sortBy",
											"value": "title"
										},
										{
											"key": "sortOrder",
											"value": "invalid"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Partially Update",
					"item": [
						{
							"name": "partially update scorecard with admin token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update scorecard with copilot token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_copilot}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update scorecard with m2m token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_m2m_update_scorecard}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"QA\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_3}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_3}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update scorecard with user token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 403', function () {\r",
											"    pm.response.to.have.status(403);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_user}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update scorecard with expired token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Failed to authenticate token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_expired}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update scorecard with invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Invalid Token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_invalid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update scorecard with no token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"No token provided.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update scorecard with invalid fields 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"status\\\" must be one of [complete, pending, running]\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending 2\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update scorecard with invalid fields 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"weight\\\" must be a positive number\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 0,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update scorecard with invalid fields 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"weight\\\" must be less than or equal to 100\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 200,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update scorecard with invalid fields 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"isUpload\\\" must be a boolean\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": \"a\"\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update scorecard with invalid fields 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"groups\\\" must be an array\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": {}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update scorecard with duplicated record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"There is already a scorecard with title: \\\"Topcoder Challenge 2\\\" and track: \\\"Develop\\\"\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update scorecard with wrong weights",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Following objects total weight must be 100\\ngroups[0].sections[0].questions\\ngroups[0].sections\\ngroups\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge new\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 25,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 20,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 75,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "partially update scorecard with not found id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 404', function () {\r",
											"    pm.response.to.have.status(404);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Scorecard with id: 00000000-0000-0000-0000-000000000000 doesn't exist\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge new\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 25,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 20,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 75,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{not_found_id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{not_found_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Fully Update",
					"item": [
						{
							"name": "fully update scorecard with admin token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge\",\r\n    \"track\": \"Design\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with copilot token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_copilot}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with m2m token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_m2m_update_scorecard}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"QA\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_3}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_3}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with user token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 403', function () {\r",
											"    pm.response.to.have.status(403);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_user}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with expired token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Failed to authenticate token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_expired}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Invalid Token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_invalid}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with no token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"No token provided.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with missing fields 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"title\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with missing fields 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"track\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with missing fields 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"status\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with missing fields 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"groups\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with missing fields 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"name\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with missing fields 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"weight\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with missing fields 7",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"sections\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with missing fields 8",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"name\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with missing fields 9",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"weight\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with missing fields 10",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"questions\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with missing fields 11",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"questionText\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with missing fields 12",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"questionGuidelines\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with missing fields 13",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"questionType\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with missing fields 14",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"weight\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with missing fields 15",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"isUpload\\\" is required\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with invalid fields 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"status\\\" must be one of [complete, pending, running]\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending 2\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with invalid fields 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"weight\\\" must be a positive number\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 0,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with invalid fields 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"weight\\\" must be less than or equal to 100\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 200,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with invalid fields 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"isUpload\\\" must be a boolean\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": \"a\"\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with invalid fields 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"\\\"groups\\\" must be an array\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 3\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": {}\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with duplicated record",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"There is already a scorecard with title: \\\"Topcoder Challenge 2\\\" and track: \\\"Develop\\\"\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge 2\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with wrong weights",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 400', function () {\r",
											"    pm.response.to.have.status(400);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Following objects total weight must be 100\\ngroups[0].sections[0].questions\\ngroups[0].sections\\ngroups\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge new\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 25,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 20,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 75,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "fully update scorecard with not found id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 404', function () {\r",
											"    pm.response.to.have.status(404);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Scorecard with id: 00000000-0000-0000-0000-000000000000 doesn't exist\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PUT",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n    \"description\": \"description\",\r\n    \"title\": \"Topcoder Challenge new\",\r\n    \"track\": \"Develop\",\r\n    \"type\": \"Custom\",\r\n    \"status\": \"pending\",\r\n    \"groups\": [\r\n        {\r\n            \"name\": \"Copyright and Licenses\",\r\n            \"weight\": 50,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 25,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 20,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        },\r\n        {\r\n            \"name\": \"File Types\",\r\n            \"weight\": 75,\r\n            \"sections\": [\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                },\r\n                {\r\n                    \"name\": \"Stock Art\",\r\n                    \"weight\": 50,\r\n                    \"questions\": [\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-4\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": true\r\n                        },\r\n                        {\r\n                            \"questionText\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionGuidelines\": \"If stockart is allowed in this contest, are all elements photographs\",\r\n                            \"questionType\": \"Scale1-9\",\r\n                            \"weight\": 50,\r\n                            \"isUpload\": false\r\n                        }\r\n                    ]\r\n                }\r\n            ]\r\n        }\r\n    ]\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/scorecards/{{not_found_id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{not_found_id}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete",
					"item": [
						{
							"name": "delete scorecard with admin token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete scorecard with copilot token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_copilot}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete scorecard with m2m token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_m2m_delete_scorecard}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_3}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_3}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete scorecard with user token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 403', function () {\r",
											"    pm.response.to.have.status(403);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_user}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete scorecard with expired token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Failed to authenticate token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_expired}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete scorecard with invalid token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Invalid Token.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_invalid}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete scorecard with no token",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 401', function () {\r",
											"    pm.response.to.have.status(401);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"No token provided.\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{URL}}/scorecards/{{scorecard_id_1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{scorecard_id_1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "delete scorecard with not found id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 404', function () {\r",
											"    pm.response.to.have.status(404);\r",
											"    const response = pm.response.json()\r",
											"    pm.expect(response.message).to.eq(\"Scorecard with id: 00000000-0000-0000-0000-000000000000 doesn't exist\")\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_administrator}}",
										"type": "text"
									}
								],
								"url": {
									"raw": "{{URL}}/scorecards/{{not_found_id}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"scorecards",
										"{{not_found_id}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		}
	]
}